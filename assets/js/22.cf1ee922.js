(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{288:function(s,t,a){"use strict";a.r(t);var n=a(5),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"用git-push代码到github"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用git-push代码到github"}},[s._v("#")]),s._v(" 用Git push代码到Github")]),s._v(" "),a("h2",{attrs:{id:"安装git："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装git："}},[s._v("#")]),s._v(" 安装Git：")]),s._v(" "),a("p",[s._v("安装Git本身很容易，不过在国内下载git真是痴想妄想，可能得下载个几个小时，不过还好有淘宝镜像可以下载，嗖的一下就下载好了，地址如下：\n"),a("a",{attrs:{href:"https://npm.taobao.org/mirrors/git-for-windows/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Git地址"),a("OutboundLink")],1),s._v("\n正常默认安装就好了，也就是一路Next就好了。")]),s._v(" "),a("h2",{attrs:{id:"设置git用户信息："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置git用户信息："}},[s._v("#")]),s._v(" 设置Git用户信息：")]),s._v(" "),a("p",[s._v("git要求使用者必须有自己的身份标识，如果不设置用户信息的话，每次commit后显示的用户为unknown。git bash执行一下命令（设置用户名和email）：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zzun"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global user.email  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"315530@qq.com"')]),s._v("\n")])])]),a("h2",{attrs:{id:"获取（公钥和私钥）密钥："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取（公钥和私钥）密钥："}},[s._v("#")]),s._v(" 获取（公钥和私钥）密钥：")]),s._v(" "),a("p",[s._v("Github选择的默认通信方式就是SSH，如果没有配置SSH key就只能clone代码，而不能push，也就是只有只读权限，所以要先在Git里生成SSH key。如果在当前用户的第一级文件夹下有.ssh文件夹，说明以前可能使用过git，把该文件夹删除（或者先备份再删除，防止意外）。")]),s._v(" "),a("p",[a("strong",[s._v("获得密钥：会有很多提示，一直按回车就可以了。")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("ssh-keygen -t rsa -C "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"315530@qq.com"')]),s._v("\n")])])]),a("p",[s._v("然后就可以在当前用户的第一级文件夹下看到.ssh文件夹了，打开，就看到了一个私钥，和一个公钥。")]),s._v(" "),a("p",[a("strong",[s._v("文件夹：")]),s._v("\nC:\\Users\\wang.ssh\\id_rsa\nC:\\Users\\wang.ssh\\id_rsa\\id_rsa.pub")]),s._v(" "),a("p",[s._v("然后把公钥id_rsa.pub里的所有内容添加到github的"),a("a",{attrs:{href:"https://github.com/settings/keys",target:"_blank",rel:"noopener noreferrer"}},[s._v("settings"),a("OutboundLink")],1),s._v("的SSH keys里就可以了。\n"),a("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/475530/1578148019570-c8d6eb83-9864-4b5d-9f72-728445dcd342.png?x-oss-process=image/resize,w_1418",alt:"alt 'settings'"}})]),s._v(" "),a("p",[s._v("经过上面的配置，git应该可以通过SSH链接服务器了，可以测试一下：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" -T git@github.com\n")])])]),a("p",[s._v("然后就看到：Hi ****! You've successfully authenticated, but GitHub does not provide shell access. 那就说明连接成功了。而且，每次push代码也不用输入密码了。")]),s._v(" "),a("h2",{attrs:{id:"编写deploy-sh文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写deploy-sh文件"}},[s._v("#")]),s._v(" 编写deploy.sh文件")]),s._v(" "),a("p",[s._v("在项目根目录下添加文件deploy.sh，然后输入一下内容。在我的示例中使用npm而不是yarn，所以有命令npm run build。\n用 git push -f git@github.com:zzunstu/my-blog.git master，将本地代码push到github的my-blog仓库里的master branch里。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/usr/bin/env sh")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 确保脚本抛出遇到的错误")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -e\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成静态文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run build\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入生成的文件夹")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" blog/.vuepress/dist\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" -A\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'deploy'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果发布到 https://<USERNAME>.github.io/<REPO>")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push -f git@github.com:zzunstu/my-blog.git master\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" -\n")])])]),a("p",[s._v("如果你打算发布到 https://"),a("USERNAME",[s._v(".github.io/"),a("REPO",[s._v("/（也就是说你的仓库在 https://github.com/"),a("USERNAME",[s._v("/"),a("REPO",[s._v('），根据官网说明，需要将 base 设置为 "/'),a("REPO",[s._v('/"，在我的示例中也就是设置base为"/my-blog/"，在config.js文件中添加base。')])],1)],1)],1)],1)],1),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"David\'s Bolg"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  description"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"This is David\'s blog"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  base"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/my-blog/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("在git bash中执行上面编写的deploy.sh，完成后可以发现代码已经提交到github相应的仓库里啦。")])])}),[],!1,null,null,null);t.default=e.exports}}]);